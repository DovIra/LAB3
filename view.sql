CREATE VIEW WEATHER_HOURLY_3PM AS
SELECT
    WEATHER_HOURLY.WEATHER_DATE,
       WEATHER_HOURLY.LOCATION_CODE,
       WEATHER_HOURLY.TIME,
       WIND_DIRECTION.WIND_DIRECTION AS WIND_DIR,
       WEATHER_HOURLY.WIND_SPEED,
       WEATHER_HOURLY.HUMIDITY,
       WEATHER_HOURLY.PRESSURE,
       WEATHER_HOURLY.CLOUD,
       WEATHER_HOURLY.TEMPERATURE
FROM WEATHER_HOURLY
JOIN WIND_DIRECTION ON WEATHER_HOURLY.WIND_DIR = WIND_DIRECTION.WIND_DIRECTION
WHERE TIME = 15
;

CREATE VIEW WEATHER_HOURLY_9AM AS
SELECT
    WEATHER_HOURLY.WEATHER_DATE,
       WEATHER_HOURLY.LOCATION_CODE,
       WEATHER_HOURLY.TIME,
       WIND_DIRECTION.WIND_DIRECTION AS WIND_DIR,
       WEATHER_HOURLY.WIND_SPEED,
       WEATHER_HOURLY.HUMIDITY,
       WEATHER_HOURLY.PRESSURE,
       WEATHER_HOURLY.CLOUD,
       WEATHER_HOURLY.TEMPERATURE
FROM WEATHER_HOURLY
JOIN WIND_DIRECTION ON WEATHER_HOURLY.WIND_DIR = WIND_DIRECTION.WIND_DIRECTION
WHERE TIME = 9
;

CREATE VIEW weather_details AS
SELECT
       to_date(TO_CHAR(WEATHER_DAILY.WEATHER_DATE, 'YYYY-mm-dd'), 'YYYY-mm-dd') as WeatherDate,
       LOCATIONS.LOCATION_NAME as Location,
       UU.MINTEMP as MinTemp,
       UU.MAXTEMP as MaxTemp,
       WEATHER_DAILY.RAINFALL as Rainfall,
       WEATHER_DAILY.EVAPORATION as Evaporation,
       WEATHER_DAILY.SUNSHINE as Sunshine,
       WEATHER_DAILY.WIND_GUST_DIR as WindGustDir,
       WEATHER_DAILY.WIND_GUST_SPEED as WindGustSpeed,
       WH9AM.WIND_DIR AS WindDir9am,
       WH3PM.WIND_DIR AS WindDir3pm,
       WH9AM.WIND_SPEED AS WindSpeed9am,
       WH3PM.WIND_SPEED AS WindSpeed3pm,
       WH9AM.HUMIDITY AS Humidity9am,
       WH3PM.HUMIDITY AS Humidity3pm,
       WH9AM.PRESSURE AS Pressure9am,
       WH3PM.PRESSURE AS Pressure3pm,
       WH9AM.CLOUD AS Cloud9am,
       WH3PM.CLOUD AS Cloud3pm,
       WH9AM.TEMPERATURE AS Temp9am,
       WH3PM.TEMPERATURE AS Temp3pm,
       CASE WHEN WEATHER_DAILY.RAINFALL > 0 THEN 'Yes' ELSE 'No' END AS RainToday,
       WEATHER_DAILY.RAINFALL_TOMORROW as RISK_MM,
       CASE WHEN WEATHER_DAILY.RAINFALL_TOMORROW > 0 THEN 'Yes' ELSE 'No' END as RainTomorrow
FROM WEATHER_DAILY
JOIN LOCATIONS ON LOCATIONS.LOCATION_NAME = WEATHER_DAILY.location_code
JOIN (
    SELECT
           WEATHER_DAILY.LOCATION_CODE,
           WEATHER_DAILY.WEATHER_DATE,
           MIN(WEATHER_HOURLY.TEMPERATURE) AS MINTEMP,
           MAX(WEATHER_HOURLY.TEMPERATURE) AS MAXTEMP
    FROM WEATHER_DAILY
    JOIN WEATHER_HOURLY ON
            WEATHER_DAILY.LOCATION_CODE = WEATHER_HOURLY.LOCATION_CODE AND
            WEATHER_DAILY.WEATHER_DATE = WEATHER_HOURLY.WEATHER_DATE
    GROUP BY WEATHER_DAILY.LOCATION_CODE, WEATHER_DAILY.WEATHER_DATE
    ) uu ON uu.LOCATION_CODE = WEATHER_DAILY.LOCATION_CODE AND uu.WEATHER_DATE = WEATHER_DAILY.WEATHER_DATE
JOIN WEATHER_HOURLY_9AM WH9AM ON WH9AM.LOCATION_CODE = WEATHER_DAILY.LOCATION_CODE AND WH9AM.WEATHER_DATE = WEATHER_DAILY.WEATHER_DATE
JOIN WEATHER_HOURLY_3PM WH3PM ON WH3PM.LOCATION_CODE = WEATHER_DAILY.LOCATION_CODE AND WH3PM.WEATHER_DATE = WEATHER_DAILY.WEATHER_DATE
;
